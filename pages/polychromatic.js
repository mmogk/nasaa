import { useEffect, useState } from 'react';
import axios from 'axios';
import Image from 'next/image';
import styles from '../styles/Home.module.css'
import Head from 'next/head'

export default function Polychromatic() {
    const [image, setImage] = useState([]);
    const [images, setImages] = useState([]);
    const [time, setTime] = useState('Loading');
    const [date , setDate] = useState('');
    const [coords, setCoords] = useState({});

    const apiKey = process.env.NEXT_PUBLIC_KEY;
    const url = `https://epic.gsfc.nasa.gov/api/natural?api_key=${apiKey}`
   
    const getPolychromaticData = async () => {
        const res = await axios.get(url);
        const data = await res.data;
        console.log(data);

        const caption = data[0].caption;
        const date = data[0].date.split(" ")[0];

        const date_formatted = date.replaceAll('-', '/');
        console.log(date_formatted);

        let times = [];
        let images = [];

        for (let i = 0; i < data.length; i++) {
            let time = data[i].date.split(" ")[1];
            let coords = data[i].centroid_coordinates;
            let imagePath = data[i].image;
            let image = `https://epic.gsfc.nasa.gov/archive/natural/${date_formatted}/png/${imagePath}.png`;
            
            times.push(time);
            images.push({
                image: image,
                coords: coords,
                time: time
            });
        }
        setDate(date);
        setImages(images);

        setImage(images[0].image);
        setTime(time[0]);  
        setCoords(images[0].coords.lat, images[0].coords.lon);  

        console.log(image);
    }
    
        useEffect(() => {
        getPolychromaticData();
    }, [])

    return (
        <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@100&display=swap" rel="stylesheet"></link>
      </Head>
        <div className={styles.main}>
        Polychromatic
        <Image src={image} alt={image} width={200} height={200}/>
        <div>{time}</div>
        <div>{date}</div>
        <div>{coords [0]}, {coords[1]}</div>

        <table>
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Image</th>
                    <th>Latitute</th>
                    <th>Longitude</th>
                </tr>
            </thead> 
            <tbody>
                {
                    images && images.map((e, i) => {
                        return(
                            <tr key={i}>
                                <td>{e.time}</td>
                                <td><Image src={e.image} alt={e.image} width={100} height={100}/></td>
                                <td>{e.coords.lat}</td>
                                <td>{e.coords.lon}</td>
                                <td>
                                    <button onClick={() => {
                                        setImage(e.image);
                                        setTime(e.time);
                                        setCoords(e.coords.lat, e.coords.lon);
                                    }}>View</button>
                                </td>
                            </tr>
                        )
                
                    })
                }
            </tbody>       
        </table>

        </div>
        </div>
    )
    
}